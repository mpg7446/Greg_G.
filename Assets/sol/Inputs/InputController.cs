//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.7.0
//     from Assets/sol/Inputs/InputController.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @InputController: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @InputController()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""InputController"",
    ""maps"": [
        {
            ""name"": ""MasterControls"",
            ""id"": ""fa81ee12-05ad-458a-81c1-dabb76cdf8d3"",
            ""actions"": [
                {
                    ""name"": ""P1_Action"",
                    ""type"": ""Button"",
                    ""id"": ""b3aa4bb7-f0bf-4c82-b667-2f3a93762e25"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""P1_Movement"",
                    ""type"": ""Value"",
                    ""id"": ""b10cf697-0e47-4144-a745-86dd8fbb8ccf"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""P2_Action"",
                    ""type"": ""Button"",
                    ""id"": ""88abe9e8-9ed3-4bbd-a5b6-830ccf7ee646"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""P2_Movement"",
                    ""type"": ""Value"",
                    ""id"": ""6cb820d6-326f-451b-84c0-3d9d053e0b12"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""3f790377-feb9-4078-84aa-7df0cb811aa9"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""P1_Action"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""76128c58-03de-44f4-a74e-2cce398d014f"",
                    ""path"": ""<Keyboard>/ctrl"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""P2_Action"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""55971cbc-577b-46dd-b588-09ad4b4648ac"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""P2_Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""985e3131-8783-43f8-a2f6-d0db3f400489"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""P2_Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""af7510c2-6cc6-4415-9b87-2802d30d43d6"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""P2_Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""dd91c1f1-58b0-4d6d-b97c-0ac434cf32b0"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""P2_Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""24020391-4d4b-4e8b-9286-f19d6823a97d"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""P2_Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""6288d3c2-26d1-46e4-b17a-d072455efb6c"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""P1_Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""17509a17-e8b1-4ebb-bd05-1b4910cc4131"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""P1_Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""3a01e826-5915-4617-b74e-e203d524ccf9"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""P1_Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""1a299902-1b11-487c-9b24-4977af2c2958"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""P1_Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""fa886394-7df9-4f71-9728-f2c8f270f57e"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""P1_Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // MasterControls
        m_MasterControls = asset.FindActionMap("MasterControls", throwIfNotFound: true);
        m_MasterControls_P1_Action = m_MasterControls.FindAction("P1_Action", throwIfNotFound: true);
        m_MasterControls_P1_Movement = m_MasterControls.FindAction("P1_Movement", throwIfNotFound: true);
        m_MasterControls_P2_Action = m_MasterControls.FindAction("P2_Action", throwIfNotFound: true);
        m_MasterControls_P2_Movement = m_MasterControls.FindAction("P2_Movement", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // MasterControls
    private readonly InputActionMap m_MasterControls;
    private List<IMasterControlsActions> m_MasterControlsActionsCallbackInterfaces = new List<IMasterControlsActions>();
    private readonly InputAction m_MasterControls_P1_Action;
    private readonly InputAction m_MasterControls_P1_Movement;
    private readonly InputAction m_MasterControls_P2_Action;
    private readonly InputAction m_MasterControls_P2_Movement;
    public struct MasterControlsActions
    {
        private @InputController m_Wrapper;
        public MasterControlsActions(@InputController wrapper) { m_Wrapper = wrapper; }
        public InputAction @P1_Action => m_Wrapper.m_MasterControls_P1_Action;
        public InputAction @P1_Movement => m_Wrapper.m_MasterControls_P1_Movement;
        public InputAction @P2_Action => m_Wrapper.m_MasterControls_P2_Action;
        public InputAction @P2_Movement => m_Wrapper.m_MasterControls_P2_Movement;
        public InputActionMap Get() { return m_Wrapper.m_MasterControls; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(MasterControlsActions set) { return set.Get(); }
        public void AddCallbacks(IMasterControlsActions instance)
        {
            if (instance == null || m_Wrapper.m_MasterControlsActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_MasterControlsActionsCallbackInterfaces.Add(instance);
            @P1_Action.started += instance.OnP1_Action;
            @P1_Action.performed += instance.OnP1_Action;
            @P1_Action.canceled += instance.OnP1_Action;
            @P1_Movement.started += instance.OnP1_Movement;
            @P1_Movement.performed += instance.OnP1_Movement;
            @P1_Movement.canceled += instance.OnP1_Movement;
            @P2_Action.started += instance.OnP2_Action;
            @P2_Action.performed += instance.OnP2_Action;
            @P2_Action.canceled += instance.OnP2_Action;
            @P2_Movement.started += instance.OnP2_Movement;
            @P2_Movement.performed += instance.OnP2_Movement;
            @P2_Movement.canceled += instance.OnP2_Movement;
        }

        private void UnregisterCallbacks(IMasterControlsActions instance)
        {
            @P1_Action.started -= instance.OnP1_Action;
            @P1_Action.performed -= instance.OnP1_Action;
            @P1_Action.canceled -= instance.OnP1_Action;
            @P1_Movement.started -= instance.OnP1_Movement;
            @P1_Movement.performed -= instance.OnP1_Movement;
            @P1_Movement.canceled -= instance.OnP1_Movement;
            @P2_Action.started -= instance.OnP2_Action;
            @P2_Action.performed -= instance.OnP2_Action;
            @P2_Action.canceled -= instance.OnP2_Action;
            @P2_Movement.started -= instance.OnP2_Movement;
            @P2_Movement.performed -= instance.OnP2_Movement;
            @P2_Movement.canceled -= instance.OnP2_Movement;
        }

        public void RemoveCallbacks(IMasterControlsActions instance)
        {
            if (m_Wrapper.m_MasterControlsActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IMasterControlsActions instance)
        {
            foreach (var item in m_Wrapper.m_MasterControlsActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_MasterControlsActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public MasterControlsActions @MasterControls => new MasterControlsActions(this);
    public interface IMasterControlsActions
    {
        void OnP1_Action(InputAction.CallbackContext context);
        void OnP1_Movement(InputAction.CallbackContext context);
        void OnP2_Action(InputAction.CallbackContext context);
        void OnP2_Movement(InputAction.CallbackContext context);
    }
}
